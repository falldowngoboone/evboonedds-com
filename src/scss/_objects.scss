@use 'settings' as *;
@use 'tools' as t;

.o-flow {
  & > * {
    margin-top: 0;
    margin-bottom: 0;
  }

  & > * + * {
    margin-top: var(--flow-space, 1em);
  }
}

.o-visually-hidden,
.o-visible-on-focus {
  position: absolute;
}

.o-visually-hidden,
.o-visible-on-focus:not(:focus) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  white-space: nowrap;
  width: 1px;
}

.l-split {
  display: flex;
  align-items: var(--flex-align, flex-start);
  gap: var(--flex-gap-col, 1em);

  flex-wrap: wrap;

  & > * {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
    min-width: min(100%, 16rem);
  }

  &[data-layout~='reverse'] {
    flex-direction: row-reverse;
  }

  &[data-layout~='1:3'] > :last-child,
  &[data-layout~='3:1'] > :first-child {
    flex-grow: 3;
  }
}

.l-grid {
  display: grid;
  grid-template-columns: var(
    --grid-template-columns,
    repeat(
      var(--grid-placement, auto-fill),
      minmax(var(--grid-min-item-size, 16rem), 1fr)
    )
  );
  gap: var(--grid-gap-col, 1em);

  &[data-layout] {
    --grid-placement: auto-fit;
  }

  &[data-layout='1:1'] {
    --grid-min-item-size: clamp(16rem, 50vw, 20rem);
  }
}

.l-page-grid {
  display: grid;
  grid-template-columns:
    [full-start] 1fr [main-start] minmax(0, var(--page-grid-max-width, 1920px))
    [main-end] 1fr [full-end];
  row-gap: var(--page-grid-gap-row, 1em);
  column-gap: var(--page-grid-gap-col, 1em);

  & > * {
    grid-column: main;
  }
}
